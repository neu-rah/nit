#!/usr/bin/env node
const fs=require("fs");
const { spawn } = require('node:child_process');
var target=process.argv[2];
if(!target) {
  console.log("need filename");
  process.exit(1);
}
console.log("Development monitor:",target);
var child=null;
function launch() {
  child=spawn("nit",[target],{
    // cwd:"../paco/",
    stdio:"inherit"
  });
  child.on('close', function(code) {
    if(code>0) process.exit(code);
    if(code) launch();
  });
}
function update(eventType,filename) {
  for(ext of [".js",".json",".ts",".xml"]) {
    if(filename.endsWith(ext)) {
      // console.log(eventType,filename);
      if(child) child.kill();
      launch();
      break;
    }
  }
}
console.log("watching folder:",process.cwd())
fs.watch(process.cwd()+"",{
    bigint:false,
    interval:500
  }, update);

console.log("watching folder:",process.cwd()+"/src")
fs.watch(process.cwd()+"/src",{
    bigint:false,
    // recursive:true,//not on linux
    interval:500
  }, update);

/*fs.watchFile(target,{//already catched by main folder
  bigint:false,
  interval:500
},()=>child&&child.kill());*/

launch();
console.log("ready...")